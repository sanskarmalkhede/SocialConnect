import type { User } from '@supabase/supabase-js'
import type { Profile, Post, Comment, Notification } from '@/lib/supabase/types'

// Extended User type with profile
export interface AuthUser extends User {
  profile?: Profile
}

// Form Types
export interface LoginFormData {
  email: string
  password: string
}

export interface RegisterFormData {
  email: string
  password: string
  confirmPassword: string
  username: string
}

export interface PostFormData {
  content: string
  category?: string
  imageUrl?: string | null
}

// Error Handling Types
export interface ErrorWithCode extends Error {
  code?: string
  status?: number
  constraint?: string
}

// API Response Types
export interface APIError {
  message: string
  code: string
  details?: ValidationError[]
}

// Validation Error Types
export interface ValidationError {
  field: string
  message: string
}

export interface APIResponse<T = unknown> {
  data: T
  error?: APIError
  status: number
}

export interface ProfileFormData {
  username: string
  bio?: string | null
  avatar_url?: string | null
  website?: string | null
  location?: string | null
  profile_visibility?: 'public' | 'private'
}

// Feed Types
export interface FeedFilters {
  category?: string
  timeframe?: 'hour' | 'day' | 'week' | 'month' | 'year' | 'all'
  sortBy?: 'newest' | 'oldest' | 'most_liked' | 'most_commented'
  authorIds?: string[]
  excludeAuthorIds?: string[]
}

export interface FeedStatsData {
  totalPosts: number
  totalUsers: number
  topCategories: { category: string; count: number }[]
  postsToday: number
  activeUsers: number
  engagementRate: number
}

// Social Interactions
export interface LikeData {
  post_id: string
  user_id: string
}

export interface FollowData {
  follower_id: string
  following_id: string
}
